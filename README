# Rainfall effects on the 2015 Juba cholera epidemic


## TODO
  - The coefficient are per year. Find by hand some good coeffs and run for artibonite

## Data

1. `cases_data.csv`: reported cholera cases for 2014-2015 in Juba
2. `rain_data.csv`: remote sensing estimate of daily rainfall (TRMM data)
3. `input_parameters.yaml`: fixed parameters for the SIRB model in [YAML](http://yaml.org/) format 

## Code

1. `pomp_cholera_juba.R`: build the [POMP](https://kingaa.github.io/pomp/) object containing data and code for simulation
2. `run_mif_cholera.R`: fit the models using [multiple iterated filtering](http://www.pnas.org/content/112/3/719)
3. `analysis_mif_runs.R`: code to produce all the figures of the paper, maybe the most usefull is the one to simulate the stochastic model in the "Compare outputs" section


## Package to install

  install.packages(c("tictoc", "pomp","tidyverse","magrittr","ggthemes","GGally","foreach","itertools","lubridate","dplyr","purrr","readr","stringr","tibble","doMC","doSNOW" ) , dependencies=TRUE)
  options(show.error.locations=TRUE)
  options(error=recover)

Time:

cholera_Np <- 1000
cholera_Nmif <- 1
cholera_Ninit_param <- n_runs
cholera_NpLL <- 2000
cholera_Nreps_global <- 1

MIF: 109.193 sec elapsed
LL: 220.92 sec elapsed


cholera_NpLL <- 1000

MIF: 108.204 sec elapsed
LL: 104.924 sec elapsed

cholera_Np <- 2000
MIF: 224.731 sec elapsed
LL: 104.081 sec elapsed

cholera_Nmif <- 1
cholera_Nreps_global <- 1
MIF: 221.893 sec elapsed
LL: 202.593 sec elapsed

dt_yrs <- 1/365.25 * .1 -> dt_yrs <- 1/365.25 * .2
 -> 54 sec 
 
 So everything is linear. Even the Ninitparameters. We were thinking that we would kep the performance if run like this  but 24 instead of 8
 because 24 core on echopc. But it is longer

